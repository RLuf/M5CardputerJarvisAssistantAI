# M5Cardputer Chat with Gemini API 
# New Propose Target by me and credits my friend ChatGPT, aka, MIA (Modulo de inteligencia Artificial)


![IMG_4196](https://github.com/vanshksingh/M5Cardputer-Chat-with-Gemini-API/assets/114809624/6dde1464-cba1-4e41-a0d2-7bf3ffa5e925)



An application that uses M5Cardputer to interact with the Gemini API for generating responses based on user input. This project includes code for managing Wi-Fi connectivity, handling user input, making API requests, and displaying responses on the M5Cardputer's screen.

OBS: See new project featuares comming by this fork.....

## Features

- **User Input Handling**: Accepts user input through the M5Cardputer keyboard.
- **API Integration**: Sends queries to the Gemini API and processes the responses.
- **Display Management**: Manages the display ogit 
## Usage
1. Insert SD Card

2. Follow On-screen instructions.

3. Get API key From https://aistudio.google.com/app/apikey

4. Type your queries using the M5Cardputer keyboard, and the application will send them to the Gemini API.

5. The responses from the Gemini API will be displayed on the M5Cardputer screen.


## In-Development (by ) **@vanshksingh**: [GitHub](https://github.com/vanshksingh)

1. Re-integrate Fastled implementation
2. Clean code 
3. Remove Print Debug function
4. Save Response to SD card 
5. Voice to text input
6. Text to voice
7. Button to switch voice modes

New Target Proposed Features
----------------------------

1.  **Voice Recognition**
    
    *   Implement voice recognition capabilities to understand and process user commands.
2.  **Text-to-Speech**
    
    *   Provide responses in a "text-to-speech" format to communicate with users audibly.
3.  **Integrations**
    
    *   **Automation**: Integrate with various automation systems to streamline tasks and processes.
    *   **Interactive Personal Assistant**: Develop features for an interactive personal assistant that can handle user requests and provide assistance.
    *   **Proactive Sensors and Alerts**: Utilize sensors for proactive monitoring and alerting to anticipate user needs and system status.
    *   **Wireless Home Control**: Enable integration with wireless home control systems to manage devices like lights and other IoT devices.
    *   **Network Administration Tools**: Provide tools for network administrators to execute and analyze code, commands, and sensor data. Include features for network monitoring, security scans, ticket management, and more.

### Observations:

*   **Voice Recognition**: Ensure that the voice recognition system is accurate and can handle various accents and languages if needed. Consider using popular libraries or APIs for this functionality.
    
*   **Text-to-Speech**: Choose a reliable text-to-speech engine that provides clear and natural-sounding voices. You may want to offer multiple voice options for users to choose from.
    
*   **Automation Integration**: Focus on integrating with popular automation platforms (like Home Assistant or SmartThings) to ensure compatibility and ease of use.
    
*   **Interactive Personal Assistant**: Include natural language processing (NLP) capabilities to enhance interaction and understanding. Providing a customizable interface can also improve user experience.
    
*   **Proactive Sensors and Alerts**: Implement intelligent algorithms for proactive monitoring to reduce false positives and ensure timely alerts.
    
*   **Wireless Home Control**: Ensure compatibility with various IoT devices and protocols. Provide easy setup and configuration options for users.
    
*   **Network Administration Tools**: Include comprehensive features for network analysis and management. Ensure that security scans are thorough and up-to-date with the latest threat intelligence.




## Create .bin 
soon


## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Author
**@ArLufti@** [GitHub](https://github.com/rluf)


Credits to original project creator - **@vanshksingh**: [GitHub](https://github.com/vanshksingh)
